// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.developtech.efuelfo.network;

import com.developtech.efuelfo.util.SPUtils;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.Interceptor;

public final class NetworkModule_GetInterceptorFactory implements Factory<Interceptor> {
  private final NetworkModule module;

  private final Provider<SPUtils> spUtilsProvider;

  public NetworkModule_GetInterceptorFactory(
      NetworkModule module, Provider<SPUtils> spUtilsProvider) {
    assert module != null;
    this.module = module;
    assert spUtilsProvider != null;
    this.spUtilsProvider = spUtilsProvider;
  }

  @Override
  public Interceptor get() {
    return Preconditions.checkNotNull(
        module.getInterceptor(spUtilsProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Interceptor> create(
      NetworkModule module, Provider<SPUtils> spUtilsProvider) {
    return new NetworkModule_GetInterceptorFactory(module, spUtilsProvider);
  }
}
