// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.developtech.efuelfo.network;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.Interceptor;
import okhttp3.OkHttpClient;

public final class NetworkModule_GetClientFactory implements Factory<OkHttpClient> {
  private final NetworkModule module;

  private final Provider<Interceptor> interceptorProvider;

  public NetworkModule_GetClientFactory(
      NetworkModule module, Provider<Interceptor> interceptorProvider) {
    assert module != null;
    this.module = module;
    assert interceptorProvider != null;
    this.interceptorProvider = interceptorProvider;
  }

  @Override
  public OkHttpClient get() {
    return Preconditions.checkNotNull(
        module.getClient(interceptorProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<OkHttpClient> create(
      NetworkModule module, Provider<Interceptor> interceptorProvider) {
    return new NetworkModule_GetClientFactory(module, interceptorProvider);
  }
}
