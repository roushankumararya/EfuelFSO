// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.developtech.efuelfo.network;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

public final class NetworkModule_ProvideRetrofitBuilderFactory
    implements Factory<Retrofit.Builder> {
  private final NetworkModule module;

  private final Provider<AllUrls> allUrlsProvider;

  private final Provider<OkHttpClient> okHttpClientProvider;

  public NetworkModule_ProvideRetrofitBuilderFactory(
      NetworkModule module,
      Provider<AllUrls> allUrlsProvider,
      Provider<OkHttpClient> okHttpClientProvider) {
    assert module != null;
    this.module = module;
    assert allUrlsProvider != null;
    this.allUrlsProvider = allUrlsProvider;
    assert okHttpClientProvider != null;
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public Retrofit.Builder get() {
    return Preconditions.checkNotNull(
        module.provideRetrofitBuilder(allUrlsProvider.get(), okHttpClientProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Retrofit.Builder> create(
      NetworkModule module,
      Provider<AllUrls> allUrlsProvider,
      Provider<OkHttpClient> okHttpClientProvider) {
    return new NetworkModule_ProvideRetrofitBuilderFactory(
        module, allUrlsProvider, okHttpClientProvider);
  }
}
