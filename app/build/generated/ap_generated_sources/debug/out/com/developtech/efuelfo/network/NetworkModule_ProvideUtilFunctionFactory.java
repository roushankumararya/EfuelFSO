// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.developtech.efuelfo.network;

import android.content.Context;
import com.developtech.efuelfo.util.UtilFunctions;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class NetworkModule_ProvideUtilFunctionFactory implements Factory<UtilFunctions> {
  private final NetworkModule module;

  private final Provider<Context> contextProvider;

  private final Provider<AllUrls> allUrlsProvider;

  public NetworkModule_ProvideUtilFunctionFactory(
      NetworkModule module, Provider<Context> contextProvider, Provider<AllUrls> allUrlsProvider) {
    assert module != null;
    this.module = module;
    assert contextProvider != null;
    this.contextProvider = contextProvider;
    assert allUrlsProvider != null;
    this.allUrlsProvider = allUrlsProvider;
  }

  @Override
  public UtilFunctions get() {
    return Preconditions.checkNotNull(
        module.provideUtilFunction(contextProvider.get(), allUrlsProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<UtilFunctions> create(
      NetworkModule module, Provider<Context> contextProvider, Provider<AllUrls> allUrlsProvider) {
    return new NetworkModule_ProvideUtilFunctionFactory(module, contextProvider, allUrlsProvider);
  }
}
